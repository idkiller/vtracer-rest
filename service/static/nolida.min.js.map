{"version":3,"file":"nolida.min.js","mappings":"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","sources":["webpack://nolida/webpack/bootstrap","webpack://nolida/webpack/runtime/compat get default export","webpack://nolida/webpack/runtime/define property getters","webpack://nolida/webpack/runtime/hasOwnProperty shorthand","webpack://nolida/webpack/runtime/make namespace object","webpack://nolida/external window \"Matter\"","webpack://nolida/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"Matter\"];","import Matter from 'matter-js'\n\nfunction getLargestVerticesFromPath (path) {\n  if (!path || path.constructor.name !== 'SVGPathElement') {\n    throw Error('path is must SVGPathElement')\n  }\n\n  let verticeSet = pathToVerticeSet(path, true)\n  let maxArea = Matter.Vertices.area(verticeSet[0])\n  let vertices = verticeSet[0]\n  for (let i = 1; i < verticeSet.length; i++) {\n    const area = Matter.Vertices.area(verticeSet[i])\n    if (maxArea < area) {\n      maxArea = area\n      vertices = verticeSet[i]\n    }\n  }\n  return vertices\n}\n\nfunction createFromPath (path) {\n  const vertices = getLargestVerticesFromPath(path)\n\n  const svg = path.ownerSVGElement\n  const svgBox = svg.getBBox()\n  const svgRect = svg.getBoundingClientRect()\n  const ratio = { x: svgBox.width / svgRect.width, y: svgBox.height / svgRect.height }\n  const rect = path.getBoundingClientRect()\n\n  const x = rect.x * ratio.x\n  const y = rect.y * ratio.y\n\n  return createComposite(x, y, vertices, {\n    isStatic: true,\n    render: {\n      opacity: 0\n    }\n  })\n}\n\nfunction createComposite (x, y, vertices, options) {\n  const center = Matter.Vertices.centre(vertices)\n  const body = {\n    position: { x: x + center.x, y: y + center.y },\n    vertices\n  }\n  return Matter.Body.create(Matter.Common.extend(body, options))\n}\n\nfunction pathToVerticeSet (path, zeroShift) {\n  if (!path || path.constructor.name !== 'SVGPathElement') return\n  return pathStringToVerticeSet(path.getAttribute('d'), zeroShift)\n}\n\nfunction pathStringToVerticeSet (pathStr, zeroShift) {\n  let verticeSet = []\n  let vertices = []\n  let numbers = []\n  let number = ''\n  let c = null\n  let minX = 9999\n  let minY = 9999\n  let it = pathStr[Symbol.iterator]()\n\n  while (true) {\n    const n = it.next()\n    if (n.done) break\n    c = n.value\n    switch (c) {\n      case 'M':\n        vertices = []\n        break\n      case 'L':\n        const vertice = { x: numbers[0], y: numbers[1] }\n        vertices.push(vertice)\n        if (zeroShift) {\n          minX = Math.min(vertice.x, minX)\n          minY = Math.min(vertice.y, minY)\n        }\n        numbers = []\n        break\n      case 'Z':\n        if (vertices && vertices.length > 0) {\n          verticeSet.push(vertices)\n        }\n        break\n      case ',':\n      case ' ':\n        const n = parseFloat(number)\n        if (!Number.isNaN(n)) {\n          numbers.push(n)\n        }\n        number = ''\n        break\n      case '-':\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '.':\n        number += c\n        break\n    }\n  }\n\n  if (zeroShift) {\n    minX = minX < 0 ? -minX : 0\n    minY = minY < 0 ? -minY : 0\n    for (let i = 0; i < verticeSet.length; i++) {\n      for (let j = 0; j < verticeSet[i].length; j++) {\n        verticeSet[i][j].x += minX\n        verticeSet[i][j].y += minY\n      }\n    }\n  }\n\n  return verticeSet\n}\n\nvar loops = new Map()\nvar loopsIndex = 0\n\nfunction runSpec (ts, spec) {\n  const generators = spec.generators\n  const mortals = spec.mortals\n\n  let i = generators.length\n  while (i--) {\n    if ((ts - generators[i].last) > generators[i].time) {\n      const generator = generators[i].generator\n      generators.splice(i, 1)\n      generator(ts)\n    }\n  }\n\n  i = mortals.length\n  while (i--) {\n    const mortal = mortals[i]\n    const bindings = mortal.bindings\n    if (bindings) {\n      bindings.forEach(b => {\n        if (b.cb(ts)) {\n          mortals.splice(i, 1)\n        }\n      })\n    }\n  }\n}\n\nfunction OnContents (event) {\n  const ts = event.timestamp\n  loops.forEach((value, key, map) => runSpec(ts, value))\n}\n\nfunction removePhysicsGlobalContents (index) {\n  loops.delete(index)\n}\n\n// eslint-disable-next-line\nfunction makePhysicsGlobalContents (engine, width, height, spec) {\n  const contents = spec.contents\n  const animation = contents.animation\n\n  const index = ++loopsIndex\n  const loop = {\n    generators: [],\n    mortals: []\n  }\n  loops.set(index, loop)\n\n  function generator (last) {\n    const x = SpecRange(contents.x) * width\n    const y = SpecRange(contents.y) * height\n    const body = SpecType(contents.type, x, y, contents.options)\n    Matter.Composite.add(engine.world, body)\n    body.name = `foobar${Math.floor(Math.random() * 1000)}`\n    if (animation) {\n      loop.generators.push({ time: SpecRange(animation.time), last, generator })\n    }\n    if (animation.bindings) {\n      let cbs = []\n      for (let i = 0; i < animation.bindings.length; i++) {\n        cbs.push(bindingToCb(engine, animation.bindings[i], body))\n      }\n      loop.mortals.push({ body, bindings: cbs })\n    }\n  }\n  generator(0)\n  return index\n}\n\nfunction bindingToCb (engine, binding, body) {\n  binding.delay = binding.delay || 0\n  const obj = { last: engine.timing.timestamp + binding.delay, cb: null, body, binding }\n  if (binding.name === 'dead') {\n    obj.cb = function (t) {\n      if (t - this.last >= 0) {\n        Matter.Composite.remove(engine.world, this.body)\n        return true\n      }\n    }\n  } else {\n    makeBindableProperty(body, binding.name, obj)\n    obj.easing = Easings[binding.easing]\n    obj.cb = function (t) {\n      if (t - this.last < 0) return false\n      const value = Math.max(0, Math.min(this.easing((t - this.last) / this.binding.duration), 1)) * (this.binding.value.to - this.binding.value.from) + this.binding.value.from\n      this.bindableProperty = value\n      return value === this.binding.value.to\n    }\n  }\n  return obj\n}\n\nfunction makeBindableProperty (obj, path, binding) {\n  const parts = path.split('.')\n  for (let i = 0; i < parts.length - 1; i++) {\n    if (!(parts[i] in obj)) throw new Error(`${parts[i]} is not in object`)\n    obj = obj[parts[i]]\n  }\n  const key = parts[parts.length - 1]\n  Object.defineProperty(binding, 'bindableProperty', {\n    get: function () {\n      return obj[key]\n    },\n    set: function (val) {\n      obj[key] = val\n    }\n  })\n}\n\n// Number\n// eslint-disable-next-line\nfunction SpecBindableProperty (format) {\n}\n\n// Number | Array | {min: Number, max: Number}\n// eslint-disable-next-line\nfunction SpecRepeater (time) {\n  if (typeof time === 'number') {\n    return function (generator) { setTimeout(generator, time) }\n  } else if (Array.isArray(time)) {\n    return function (generator) { setTimeout(generator, time[Math.floor(Math.random() * time.length)]) }\n  } else if (typeof time === 'object' && time !== null) {\n    const min = time.min\n    const max = time.max\n    return function (generator) { setTimeout(generator, Math.random() * (max - min) + min) }\n  } else {\n    return null\n  }\n}\n\nfunction SpecType (type, x, y, options) {\n  switch (type) {\n    case 'circle':\n      return Matter.Bodies.circle(x, y, SpecRange(options.radius), options)\n    case 'vertices':\n      return Matter.Bodies.fromVertices(x, y, options.vertices, options)\n    case 'polygon':\n      return Matter.Bodies.polygon(x, y, SpecRange(options.sides), SpecRange(options.radius), options)\n    case 'rectangle':\n      return Matter.Bodies.rectangle(x, y, SpecRange(options.width), SpecRange(options.height), options)\n    case 'trapezoid':\n      return Matter.Bodies.trapezoid(x, y, SpecRange(options.width), SpecRange(options.height), SpecRange(options.slope), options)\n  }\n}\n\n// Number | Array | {min: Number, max: Number}\nfunction SpecRange (format) {\n  if (typeof format === 'number') {\n    return format\n  } else if (Array.isArray(format)) {\n    return format[Math.floor(Math.random() * format.length)]\n  } else if (typeof format === 'object' && format !== null) {\n    const min = format.min\n    const max = format.max\n    return Math.random() * (max - min) + min\n  }\n  throw new Error('it is wrong number format')\n}\n\n// eslint-disable-next-line\nfunction SpecRangeCB (format) {\n  if (typeof format === 'number') {\n    return () => format\n  } else if (Array.isArray(format)) {\n    return () => format[Math.floor(Math.random() * format.length)]\n  } else if (typeof format === 'object' && format !== null) {\n    const min = format.min\n    const max = format.max\n    return () => Math.random() * (max - min) + min\n  }\n  throw new Error('it is wrong number format')\n}\n\nconst easeIn = p => t => Math.pow(t, p)\nconst easeOut = p => t => 1 - easeIn(p)(1 - t)\nconst easeInOut = p => t => t < 0.5 ? easeIn(p)(t * 2) / 2 : easeOut(p)(t * 2 - 1) / 2 + 0.5\nconst Easings = {\n  linear: easeIn(1),\n  easeInQuad: easeIn(2),\n  easeOutQuad: easeOut(2),\n  easeInOutQuad: easeInOut(2),\n  easeInCubic: easeIn(3),\n  easeOutCubic: easeOut(3),\n  easeInOutCubic: easeInOut(3),\n  easeInQuart: easeIn(4),\n  easeOutQuart: easeOut(4),\n  easeInOutQuart: easeInOut(4),\n  easeInQuint: easeIn(5),\n  easeOutQuint: easeOut(5),\n  easeInOutQuint: easeInOut(5)\n}\n\nexport default {\n  OnContents,\n  makePhysicsGlobalContents,\n  removePhysicsGlobalContents,\n  createFromPath,\n  createComposite,\n  getLargestVerticesFromPath\n}\n"],"names":["Matter","getLargestVerticesFromPath","path","constructor","name","Error","verticeSet","pathToVerticeSet","maxArea","Vertices","area","vertices","i","length","createFromPath","svg","ownerSVGElement","svgBox","getBBox","svgRect","getBoundingClientRect","ratio","x","width","y","height","rect","createComposite","isStatic","render","opacity","options","center","centre","body","position","Body","create","Common","extend","zeroShift","pathStringToVerticeSet","getAttribute","pathStr","numbers","number","c","minX","minY","it","Symbol","iterator","n","next","done","value","vertice","push","Math","min","parseFloat","Number","isNaN","j","loops","Map","loopsIndex","runSpec","ts","spec","generators","mortals","last","time","generator","splice","mortal","bindings","forEach","b","cb","OnContents","event","timestamp","key","map","removePhysicsGlobalContents","index","delete","makePhysicsGlobalContents","engine","contents","animation","loop","set","SpecRange","SpecType","type","Composite","add","world","floor","random","cbs","bindingToCb","binding","delay","obj","timing","t","remove","makeBindableProperty","easing","Easings","max","duration","to","from","bindableProperty","parts","split","Object","defineProperty","get","val","SpecBindableProperty","format","SpecRepeater","setTimeout","Array","isArray","Bodies","circle","radius","fromVertices","polygon","sides","rectangle","trapezoid","slope","SpecRangeCB","easeIn","p","pow","easeOut","easeInOut","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"sourceRoot":""}